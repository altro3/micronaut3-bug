/*
 * Compute API
 * API for the Compute Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.micronaut.bug.api;

import java.util.Arrays;
import java.util.Map;
import java.util.stream.Collectors;

import io.micronaut.serde.annotation.Serdeable;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets ColorEnum
 */
@Serdeable
public enum ColorEnum {

    RED("red"),
    BLUE("blue"),
    GREEN("green"),
    LIGHT_BLUE("light-blue"),
    DARK_GREEN("dark-green");

    private final String value;

    ColorEnum(String value) {
        this.value = value;
    }

    /**
     * @return The value represented by this enum
     */
    @JsonValue
    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public final static Map<String, ColorEnum> VALUE_MAPPING = Map.copyOf(Arrays.stream(values())
        .collect(Collectors.toMap(v -> v.value, v -> v)));

    /**
     * Create this enum from a value.
     *
     * @return The enum
     */
    @JsonCreator
    public static ColorEnum fromValue(String value) {
        if (!VALUE_MAPPING.containsKey(value)) {
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
        return VALUE_MAPPING.get(value);
    }
}
