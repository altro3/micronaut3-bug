/*
 * Compute API
 * API for the Compute Service
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.micronaut.bug.api;

import java.util.Objects;
import java.util.Optional;

import io.micronaut.serde.annotation.Serdeable;

import jakarta.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Reptile
 */
@Serdeable
@JsonPropertyOrder({
        Reptile.JSON_PROPERTY_NUM_LEGS,
        Reptile.JSON_PROPERTY_FANGS,
        Reptile.JSON_PROPERTY_FANG_DESCRIPTION
})
public class Reptile extends Animal {

    public static final String JSON_PROPERTY_NUM_LEGS = "numLegs";
    public static final String JSON_PROPERTY_FANGS = "fangs";
    public static final String JSON_PROPERTY_FANG_DESCRIPTION = "fangDescription";

    @NotNull
    @JsonProperty(JSON_PROPERTY_NUM_LEGS)
    private Integer numLegs;

    @NotNull
    @JsonProperty(JSON_PROPERTY_FANGS)
    private Boolean fangs;

    @JsonProperty(JSON_PROPERTY_FANG_DESCRIPTION)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private String fangDescription;

    private Reptile() {
    }

    public Reptile(Integer numLegs, Boolean fangs) {
        this.numLegs = numLegs;
        this.fangs = fangs;
    }

    /**
     * @return the numLegs property value
     */
    public Integer getNumLegs() {
        return numLegs;
    }

    /**
     * Set the numLegs property value
     */
    public void setNumLegs(Integer numLegs) {
        this.numLegs = numLegs;
    }

    /**
     * Set numLegs in a chainable fashion.
     *
     * @return The same instance of Reptile for chaining.
     */
    public Reptile numLegs(Integer numLegs) {
        this.numLegs = numLegs;
        return this;
    }

    /**
     * @return the fangs property value
     */
    public Boolean getFangs() {
        return fangs;
    }

    /**
     * Set the fangs property value
     */
    public void setFangs(Boolean fangs) {
        this.fangs = fangs;
    }

    /**
     * Set fangs in a chainable fashion.
     *
     * @return The same instance of Reptile for chaining.
     */
    public Reptile fangs(Boolean fangs) {
        this.fangs = fangs;
        return this;
    }

    /**
     * @return the fangDescription property value
     */
    public String getFangDescription() {
        return fangDescription;
    }

    /**
     * @return the fangDescription property value wrapped in an optional
     */
    @JsonIgnore
    public Optional<String> getFangDescriptionOptional() {
        return Optional.ofNullable(fangDescription);
    }

    /**
     * Set the fangDescription property value
     */
    public void setFangDescription(String fangDescription) {
        this.fangDescription = fangDescription;
    }

    /**
     * Set fangDescription in a chainable fashion.
     *
     * @return The same instance of Reptile for chaining.
     */
    public Reptile fangDescription(String fangDescription) {
        this.fangDescription = fangDescription;
        return this;
    }

    @Override
    public Reptile propertyClass(String propertyClass) {
        super.setPropertyClass(propertyClass);
        return this;
    }

    @Override
    public Reptile color(ColorEnum color) {
        super.setColor(color);
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Reptile reptile = (Reptile) o;
        return Objects.equals(numLegs, reptile.numLegs) &&
                Objects.equals(fangs, reptile.fangs) &&
                Objects.equals(fangDescription, reptile.fangDescription) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(numLegs, fangs, fangDescription, super.hashCode());
    }

    @Override
    public String toString() {
        return "Reptile("
                + "propertyClass: " + getPropertyClass() + ", "
                + "color: " + getColor()
                + ")";
    }

}
