plugins {
    id 'io.micronaut.application' version '4.5.0'
//    id 'io.micronaut.aot' version '4.5.0'
//    id 'io.micronaut.openapi' version '4.5.0'
//    id 'org.openapi.generator' version '7.12.0'
}

ext {

    ver = [
            micronaut: '4.7.6',
            core     : '4.8.5',
            openapi  : '6.15.0',
            serde    : '2.14.0'
    ]

    jreImage = 'bellsoft/liberica-openjre-alpine:17.0.10'
    jreImageNative = 'debian:stable-slim'
}

mainClassName = "com.micronaut.bug.Application"
micronaut {
    version ver.micronaut
    runtime "netty"
    testRuntime "junit5"
    enableNativeImage false
    processing {
        group project.group
        incremental true
        annotations "com.micronaut.bug.*"
    }
//    aot {
//        possibleEnvironments = ["local"]
//        targetEnvironments = ["local"]
//        optimizeServiceLoading = true
//        convertYamlToJava = true
//        precomputeOperations = true
//        cacheEnvironment = true
//        optimizeClassLoading = true
//        deduceEnvironment = true
//        optimizeNetty = true
//    }
//    openapi {
//        version = ver.openapi
//        server(file("swagger.yml")) {
//            apiPackageName = "com.api.openapi.generated.api"
//            modelPackageName = "com.api.openapi.generated.model"
//            useReactive = false
//            useAuth = false
//        }
//    }
}

wrapper.gradleVersion = '8.13'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

dockerfile {
    baseImage(jreImage)
    args "-Dfile.encoding=UTF-8"
}
graalvmNative {
    binaries {
        main {
            verbose = true
        }
    }
}
dockerfileNative {
    baseImage(jreImageNative)
}

dependencies {

    annotationProcessor "org.projectlombok:lombok"
//    annotationProcessor "io.micronaut.validation:micronaut-validation"
    annotationProcessor "io.micronaut:micronaut-core-processor"
    annotationProcessor "io.micronaut.serde:micronaut-serde-processor"
//    annotationProcessor "io.micronaut.security:micronaut-security-annotations"
    annotationProcessor "io.micronaut.openapi:micronaut-openapi"

    compileOnly "org.projectlombok:lombok"
    compileOnly "io.micronaut:micronaut-inject-java"
    compileOnly "io.micronaut.openapi:micronaut-openapi-annotations"
    compileOnly "com.fasterxml.jackson.core:jackson-annotations"

    implementation "io.micronaut.validation:micronaut-validation"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut.reactor:micronaut-reactor"
    implementation "io.micronaut.serde:micronaut-serde-jackson"
    implementation "org.yaml:snakeyaml"
//    implementation "io.micronaut.security:micronaut-security-jwt"

    runtimeOnly "ch.qos.logback:logback-classic"
//    runtimeOnly "io.micronaut:micronaut-jackson-databind"

    testAnnotationProcessor "org.projectlombok:lombok"
    testAnnotationProcessor "io.micronaut:micronaut-core-processor"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"

    testCompileOnly "org.projectlombok:lombok"
    testCompileOnly "io.micronaut:micronaut-inject-java"

    testImplementation "io.micronaut.test:micronaut-test-junit5"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

//    aotPlugins "org.yaml:snakeyaml"
}

//project.gradle.startParameter.excludedTaskNames.add("generateServerOpenApiModels")
//tasks.named("generateServerOpenApiApis") {
//    it.enabled = false
//}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs = [
            '-parameters',
            '-Xlint:unchecked',
            '-Xlint:deprecation'
    ]
    options.fork = true
//    options.forkOptions.jvmArgs += "-Dmicronaut.openapi.views.spec=swagger-ui.enabled=true,swagger-ui.js.url=/openapi/res/"
}

tasks.named("inspectRuntimeClasspath") {enabled = false }

configurations.configureEach {
    resolutionStrategy {
//        dependencySubstitution {
//            substitute(module("io.micronaut:micronaut-jackson-databind"))
//                    .using(module("io.micronaut.serde:micronaut-serde-jackson:1.3.2"))
//        }

        cacheDynamicVersionsFor 0, 'minutes'
        cacheChangingModulesFor 0, 'minutes'
    }
}

//compileJava {
//    dependsOn("generateClientOpenApiApis", "generateClientOpenApiModels")
//}

//tasks.register("generateApi", org.openapitools.generator.gradle.plugin.tasks.GenerateTask.class) {
//    generatorName.set("spring")
//    library.set("spring-boot")
//    inputSpec.set("$rootDir/library-definition.yml")
//    apiPackage.set("com.example.openapi.api")
//    modelPackage.set("com.example.openapi.api")
//    outputDir.set(layout.buildDirectory.dir("generated/openapi").get().toString())
////    enablePostProcessFile.set(true)
//    skipOverwrite.set(false)
//    generateModelTests.set(false)
//    generateModelDocumentation.set(false)
//    generateApiTests.set(false)
//    generateApiDocumentation.set(false)
//    skipValidateSpec.set(true)
//    configOptions.set([
////            "useSealed" : "true",
////            "useOneOfInterfaces" : "true",
////            "interfaceOnly" : "true",
////            "skipDefaultInterface" : "true",
////            "serializationLibrary" : "jackson",
////            "openApiNullable" : "false",
////            "serializableModel" : "true",
//            "useSpringBoot3" : "true",
////            "generateOneOfAnyOfWrappers" : "true",
//////            "useOneOfInterfaces" : "true",
////            "useBeanValidation" : "true",
////            "performBeanValidation" : "true",
//    ])
//    group = "openapi tools"
//}
